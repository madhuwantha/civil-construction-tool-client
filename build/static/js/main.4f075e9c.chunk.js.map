{"version":3,"sources":["helpers/http.js","store/action/department.js","constance/url.js","store/action/behavior.js","polyfill.js","store/reducer/department.js","store/reducer/behavior.js","store/reducer/pagination.js","components/Loading.js","screens/Base.js","App.js","serviceWorker.js","index.js","store/action/pagination.js"],"names":["get","url","headers","Headers","append","Promise","resolve","reject","fetch","mode","method","then","res","console","log","json","catch","error","post","body","JSON","stringify","status","stated","response","states","message","LOAD_DEPARTMENT","CREATE_DEPARTMENT","createDepartment","department","dispatch","a","isLoading","http","host","name","code","success","type","data","loadDepartments","apiResult","loadDepartmentsPage","page","size","LOAD_DEPARTMENS_PAGE_URl","updatePagination","totalPages","totalItemsCount","totalElements","itemsCountPerPage","activePage","pageable","pageNumber","content","CHANGE_STATE","ADD_MESSAGE","DEL_ALL","ERROR","SUCCESS","NotificationManager","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","initialState","departments","messages","isError","errorMsg","Loading","active","spinner","text","styles","base","marginTop","width","fontColor","stroke","DefaultLayout","React","lazy","Login","Register","Page404","Page500","Base","props","Suspense","fallback","exact","path","render","Component","connect","state","rootReducer","combineReducers","action","push","output","forEach","d","behavior","newMessages","pagination","PAGE_CHANGE","UPDATE_PAGINATION","store","createStore","applyMiddleware","ReduxThunk","App","this","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","stateData"],"mappings":"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","file":"static/js/main.4f075e9c.chunk.js","sourcesContent":["export const get = (url) => {\n  let headers = new Headers();\n\n  headers.append(\"Content-Type\", \"application/json\");\n  headers.append(\"Accept\", \"application/json\");\n  headers.append(\"Origin\", \"http://localhost:3000\");\n\n  return new Promise((resolve, reject) => {\n    fetch(url, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: headers,\n    })\n      .then((res) => {\n        console.log(res)\n        resolve(res.json())})\n      .catch((error) => {\n        console.log(\"Authorization failed : \" + error);\n        reject();\n      });\n  });\n};\n\nexport const post = (url, body) => {\n  let headers = new Headers();\n\n  headers.append(\"Content-Type\", \"application/json\");\n  headers.append(\"Accept\", \"application/json\");\n  headers.append(\"Origin\", \"http://localhost:3000\");\n  return new Promise((resolve, reject) => {\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: headers,\n    })\n      .then((res) => {\n        if (res.status == 200){\n          resolve({stated: 200, response: res.json()})\n        }else {\n          reject({states: res.status, message: res.json()});\n        }\n      })\n      .catch((error) => {\n        console.log(\"Authorization failed : \" + error);\n        reject(error);\n      });\n  });\n};\n\nexport const put = (url, body) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, {\n      method: \"PUT\",\n      body: body,\n    })\n      .then((res) => resolve(res))\n      .then((res) => reject(res));\n  });\n};\n\nexport const deleteMethod = (url) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, {\n      method: \"DELETE\",\n    })\n      .then((res) => resolve(res))\n      .then((res) => reject(res));\n  });\n};\n\n// headers.append(\n//   \"Authorization\",\n//   \"Basic \" + base64.encode(username + \":\" + password)\n// );\n","import * as http from \"../../helpers/http\";\nimport {\n  CREATE_DEPARTMENT_URl,\n  LOAD_DEPARTMENS_URl,\n  LOAD_DEPARTMENS_PAGE_URl\n} from \"../../constance/url\";\n\n\nimport {error, isLoading, success} from './behavior'\nimport {updatePagination} from './pagination'\n\nexport const LOAD_DEPARTMENT = \"LOAD_DEPARTMENT\";\nexport const LOAD_DEPARTMENT_PAGE = \"LOAD_DEPARTMENT_PAGE\";\nexport const CREATE_DEPARTMENT = \"DEPARTMENT\";\n\nexport const createDepartment = (department) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true));\n      const apiResult = await http.post(CREATE_DEPARTMENT_URl, {\n        name: department.name,\n        code: department.code,\n      });\n      dispatch(isLoading(false));\n      dispatch(success(\"Department created successfully!\"));\n      dispatch({\n        type: CREATE_DEPARTMENT,\n        data: department,\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch(error(\"Department created failed!\"))\n    }\n  };\n};\n\nexport const loadDepartments = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true));\n      const apiResult = await http.get(LOAD_DEPARTMENS_URl);\n      dispatch(isLoading(false));\n      dispatch({\n        type: LOAD_DEPARTMENT,\n        data: apiResult,\n      });\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  };\n};\n\nexport const loadDepartmentsPage = (page, size) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading(true));\n      const apiResult = await http.get(LOAD_DEPARTMENS_PAGE_URl+ \"?page=\"+page+\"&size=\"+size);\n      // console.log(apiResult);\n      dispatch(isLoading(false));\n      dispatch(updatePagination({\n        totalPages: apiResult.totalPages,\n        totalItemsCount: apiResult.totalElements,\n        itemsCountPerPage: apiResult.size,\n        activePage: apiResult.pageable?.pageNumber\n      } ))\n      dispatch({\n        type: LOAD_DEPARTMENT,\n        data: apiResult.content,\n      });\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  };\n};\n","const host = \"http://localhost:8080/\";\n\nexport const GET_MY_LETTERS = host + \"letter/get-by-owner\";\nexport const GET_LETTER_TO_ME = host + \"letter/get-by-request-send-to\";\nexport const CREATE_LETTER_URl = host + \"letter/create\";\n\nexport const CREATE_DEPARTMENT_URl = host + \"department/create\";\nexport const LOAD_DEPARTMENS_URl = host + \"department/list\";\nexport const LOAD_DEPARTMENS_PAGE_URl = host + \"department/page\";\n\nexport const CREATE_POSITION_URl = host + \"position/create\";\nexport const LOAD_POSITIONS_URl = host + \"position/list\";\n\nexport const CREATE_STAFF_MEMBER_URl = host + \"staff-member/create\";\nexport const LOAD_STAFF_MEMBER_URl = host + \"staff-member/list\";\n\nexport const CREATE_LETTER_TYPE_URl = host + \"letter-type/create\";\nexport const LOAD_LETTER_TYPE_URl = host + \"letter-type/list\";\n\nexport const CREATE_REQUEST_URl = host + \"request/create\";\nexport const LOAD_REQUEST_URl = host + \"request/list\";\n","\nimport {\n  NotificationManager,\n} from \"react-notifications\";\n\nexport const CHANGE_STATE = \"CHANGE_STATE\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const DEL_ALL = \"DEL_ALL\";\nexport const ERROR = \"ERROR\";\nexport const SUCCESS = \"SUCCESS\";\n\n\n\nexport const  error = (message) => {\n  NotificationManager.error(message);\n  return {\n    type: ERROR,\n    message: error\n  }\n}\n\nexport const  success = (message) => {\n  // console.log(\"in error action\" + error)\n  NotificationManager.success(message);\n  return {\n    type: SUCCESS,\n    message: error\n  }\n}\n\nexport const isLoading = (isLoading) => {\n  return {\n    type: CHANGE_STATE,\n    isLoading: isLoading,\n  };\n};\n\nexport const addMessage = (message, messageType) => {\n  return {\n    type: ADD_MESSAGE,\n    data: {\n      message: message,\n      messageType: messageType,\n    },\n  };\n};\n\nexport const delAllMessage = () => {\n  return {\n    type: DEL_ALL,\n  };\n};\n","/*\r\n* required polyfills\r\n*/\r\nimport \"core-js\";\r\nimport 'core-js/features/set/map';\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es/symbol'\r\n// import 'core-js/es/object'\r\n// import 'core-js/es/function'\r\n// import 'core-js/es/parse-int'\r\n// import 'core-js/es/parse-float'\r\n// import 'core-js/es/number'\r\n// import 'core-js/es/math'\r\n// import 'core-js/es/string'\r\n// import 'core-js/es/date'\r\n// import 'core-js/es/array'\r\n// import 'core-js/es/regexp'\r\n// import 'core-js/es/map'\r\n// import 'core-js/es/weak-map'\r\n// import 'core-js/es/set'\r\n// import 'core-js/es/object'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n  if ( typeof window.CustomEvent === \"function\" ) return false\r\n\r\n  function CustomEvent ( event, params ) {\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    var evt = document.createEvent( 'CustomEvent' )\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\r\n    return evt\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n})()\r\n","import { LOAD_DEPARTMENT, CREATE_DEPARTMENT } from \"../action/department\";\r\n\r\nconst initialState = {\r\n  departments: [],\r\n  code: \"null\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_DEPARTMENT:\r\n      return {\r\n        ...state,\r\n        departments: state.departments.push(action.data),\r\n      };\r\n    case LOAD_DEPARTMENT:\r\n      let departments = action.data;\r\n      // console.log(departments);\r\n      let output = [];\r\n      departments.forEach((d) => {\r\n        output.push(d);\r\n      });\r\n      return {\r\n        ...state,\r\n        departments: output,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CHANGE_STATE, ADD_MESSAGE, DEL_ALL, ERROR, SUCCESS } from \"../action/behavior\";\n\nconst initialState = {\n  isLoading: false,\n  messages: [],\n  isError: false,\n  errorMsg: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_STATE:\n      // console.log(action);\n      return { ...state, isLoading: action.isLoading };\n      break;\n    case ADD_MESSAGE:\n      let newMessages = state.messages;\n      return { ...state, messages: newMessages.push(action.data) };\n      break;\n    case DEL_ALL:\n      return { ...state, messages: [] };\n      break;\n    case ERROR:\n      // console.log(\"in error state\")\n      return {...state,isError: true, errorMsg: action.message }\n      break;\n    case SUCCESS:\n      return {...state}\n      break;\n    default:\n      return state;\n  }\n};\n","import {\nPAGE_CHANGE, UPDATE_PAGINATION\n} from \"../action/pagination\";\n\n\n\nconst initialState = {\n  totalPages: 0,\n  totalItemsCount: 0,\n  itemsCountPerPage: 0,\n  activePage: 0,\n  size: 5\n};\n\n\nexport default (state = initialState, action) => {\n  switch (action.type){\n    case PAGE_CHANGE:\n      return { ...state, activePage: action.pageNumber };\n    case UPDATE_PAGINATION:\n      return {...state ,\n        totalPages: action.data.totalPages,\n        totalItemsCount: action.data.totalItemsCount,\n        itemsCountPerPage: action.data.itemsCountPerPage,\n        activePage: action.data.activePage\n      }\n    default:\n      return {...state}\n  }\n}\n","import React, { Component } from \"react\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst Loading = () => (\r\n  <LoadingOverlay\r\n    active={true}\r\n    // spinner={<BounceLoader />}\r\n    spinner={true}\r\n    text=\"Loading...\"\r\n    styles={{\r\n      spinner: (base) => ({\r\n        ...base,\r\n        marginTop: 250,\r\n        width: \"100px\",\r\n        fontColor: \"black\",\r\n        \"& svg circle\": {\r\n          stroke: \"rgba(0, 255, 0, 1)\",\r\n        },\r\n      }),\r\n    }}\r\n  >\r\n    {/* <p>Some content or children or something.</p> */}\r\n  </LoadingOverlay>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport {\n  NotificationContainer,\n} from \"react-notifications\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Loading from \"../components/Loading\";\n\nimport { connect } from \"react-redux\";\nimport { isLoading } from \"../store/action/behavior\";\n\n// Containers\nconst DefaultLayout = React.lazy(() => import(\"../containers/DefaultLayout\"));\n\n// Pages\nconst Login = React.lazy(() => import(\"../views/Pages/Login\"));\nconst Register = React.lazy(() => import(\"../views/Pages/Register\"));\nconst Page404 = React.lazy(() => import(\"../views/Pages/Page404\"));\nconst Page500 = React.lazy(() => import(\"../views/Pages/Page500\"));\n\nclass Base extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <HashRouter>\n        <NotificationContainer />\n        <React.Suspense fallback={Loading()}>\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              name=\"Login Page\"\n              render={(props) => <Login {...props} />}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              name=\"Register Page\"\n              render={(props) => <Register {...props} />}\n            />\n            <Route\n              exact\n              path=\"/404\"\n              name=\"Page 404\"\n              render={(props) => <Page404 {...props} />}\n            />\n            <Route\n              exact\n              path=\"/500\"\n              name=\"Page 500\"\n              render={(props) => <Page500 {...props} />}\n            />\n            <Route\n              path=\"/\"\n              name=\"Home\"\n              render={(props) => <DefaultLayout {...props} />}\n            />\n          </Switch>\n        </React.Suspense>\n      </HashRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { ...state };\n};\n\nexport default connect(mapStateToProps, {\n  isLoading,\n})(Base);\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\n\nimport departmentReducer from \"./store/reducer/department\";\nimport behaviorReducer from \"./store/reducer/behavior\";\nimport paginationReducer from \"./store/reducer/pagination\";\n\nimport \"./App.scss\";\n\nimport Base from \"./screens/Base\";\n\nconst rootReducer = combineReducers({\n  department: departmentReducer,\n  behavior: behaviorReducer,\n  pagination: paginationReducer\n});\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Base {...this.props} />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\r\nimport 'react-app-polyfill/stable';\r\n// import 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\n\nexport const PAGE_CHANGE = \"PAGE_CHANGE\";\nexport const UPDATE_PAGINATION = \"UPDATE_PAGINATION\";\n\n\nexport const pageChange = (pageNumber) =>{\n  return {\n    type: PAGE_CHANGE,\n    pageNumber: pageNumber\n  }\n}\n\n\nexport const updatePagination = (stateData) =>{\n  return {\n    type: UPDATE_PAGINATION,\n    data: stateData\n  }\n}\n"],"sourceRoot":""}